.flicker{

}
.flicker-enter{
    animation-name: flicker, shake;
    /* configurar tambien el tiempo en el componente Guitarra */
    animation-duration: .5s, .5s;
    animation-timing-function: linear, ease-in-out;
}
.flicker-enter-active{
    
}
.flicker-leave{
    animation-name: flicker, shake;
    /* configurar tambien el tiempo en el componente Guitarra */
    animation-duration: .5s, .5s;
    animation-timing-function: linear, ease-in-out;
}
.flicker-leave-active{

}
@keyframes flicker {
    from {
      opacity: 0.5;
      transform: rotateY(0);
    }
    4% {
      opacity: .5;
    }
    6% {
      opacity: .45;
    }
    8% {
      opacity: .55;
    }
    10% {
      opacity: .45;
    }
    11% {
      opacity: .5;
    }
    12% {
      opacity: .65;
    }
    14% {
      opacity: .55;
    }
    16% {
      opacity: .70;
    }
    17% {
      opacity: .55;
    }
    19% {
      opacity: .5;
    }
    20% {
      opacity: .5;
    }
    24% {
      opacity: .5;
    }
    26% {
      opacity: .69;
    }
    28% {
      opacity: .5;
    }
    38% {
      opacity: .45;
    }
    40% {
      opacity: .5;
    }
    42% {
      opacity: .6;
    }
    44% {
      opacity: .5;
    }
    46% {
      opacity: .5;
    }
    56% {
      opacity: .5;
    }
    58% {
      opacity: .75;
    }
    60% {
      opacity: .5;
    }
    68% {
      opacity: .5;
    }
    70% {
      opacity: .6;
    }
    72% {
      opacity: .5;
    }
    93% {
      opacity: .5;
    }
    95% {
      opacity: .6;
    }
    97% {
      opacity: .5;
    }
    to {
      opacity: .5;
      transform: rotateY(0360deg);
    }
  }

@keyframes shake{
    10%, 90%{
        transform: translateX(-1px);
    }20%,80%{
        transform: translateX(2px);
    }30%, 50%, 70%{
        transform: translateX(-4px);
    }40%, 60%{
        transform: translateX(4px);
    }
}

.fade{

}
.fade-enter{
    opacity: 0;
    transform: scale(.5);
}
.fade-enter-active{
    opacity: 1;
    transform: scale(1);
    transition: .3s;
}
/* es comun que las propiedades del leave sean lo contrario del enter */
.fade-leave{
    opacity: 1;
    transform: scale(1);
}
.fade-leave-active{
    opacity: 0;
    transform: scale(.5);
    transition: .3s;
}

/* las animaciones con react no solo son visuales sino que desparecen del DOM hasta volver a ser invocados */
.animationInOut-enter{
    animation: animationIn .8s;
}
.animationInOut-leave{
    animation: animationOut .8s;
}


/* reutilizando codigo de proyecto entrada-salida */
@keyframes animationIn{
    0%{
        transform: translateY(-3000px);
    }
    60%{
        transform: translateY(25px);
    }
    75%{
        transform: translateY(-10px);
    }
    90%{
        transform: translateY(5px);
    }
}
@keyframes animationOut{
    0%{
        transform: translateY(5px);
    }
    60%{
        transform: translateY(-10px);
    }
    75%{
        transform: translateY(25px);
    }
    100%{
        transform: translateY(-3000px);
    }
}

/* ANIMACION DE CORAZONES */
.like{
    cursor: pointer;
    /* width: 100px;
    height: 100px; */
    /* pongo a la mitad el contenedor y la imagen para que cuando 
    se muestre en una pantalla mas grande no se pixelee */
    width: 50px;
    height: 50px;
    background-image: url('../images/corazon.png');
    background-size: 1450px 50px;
    /* Aqui oculto los corazones que estan en espera de aparecer */
    bottom: -100px;
    position: fixed; 
}
.like.is-liked{
    animation-name: like, movimiento;
    animation-duration: 1s, 5s;
    animation-timing-function: steps(28), linear;
    /* background-position: right; */
    /* el elemento se quedara a como finalice la animacion */
    animation-fill-mode: forwards;
    animation-iteration-count: infinite, 1;
}
@keyframes like{
    0%{
        background-position-x: 0;
    }100%{
        background-position: right;
        /* background-position-x: -2800px; */
    }
}

@keyframes movimiento{
    from{
        position: absolute;
        bottom: 0;
    }
    to{
        position: absolute;
        bottom: 110%
    }
}